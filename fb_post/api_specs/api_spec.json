{
  "swagger": "2.0",
  "host": "localhost:8000",
  "basePath": "/api/fb_post/",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description": "A simple API to learn how to write OpenAPI Specification"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users"
      },
      "type": "oauth2"
    }
  },
  "security": [],
  "definitions": {
    "PostDetails": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "posted_by": {
          "type": "integer"
        }
      },
      "required": [
        "content",
        "posted_by"
      ]
    },
    "PostResponseDetails": {
      "type": "object",
      "properties": {
        "post_id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "post_id"
      ]
    },
    "DefaultHttpExceptionFields": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        },
        "res_status": {
          "type": "string",
          "enum": [
            "DUPLICATE_TO_IDS",
            "INVALID_INPUT_TO_IDS"
          ]
        }
      },
      "required": [
        "response",
        "http_status_code",
        "res_status"
      ]
    },
    "TodoId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "BasicTodo": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "is_completed": {
          "type": "boolean"
        },
        "remind_at": {
          "type": "string"
        }
      },
      "required": [
        "description"
      ]
    },
    "Todo": {
      "allOf": [
        {
          "$ref": "#/definitions/BasicTodo"
        },
        {
          "$ref": "#/definitions/TodoId"
        }
      ]
    },
    "CreatePostFailure": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        },
        "res_status": {
          "type": "string",
          "enum": [
            "INVALID_USER_ID"
          ]
        }
      },
      "required": [
        "response",
        "http_status_code",
        "res_status"
      ]
    }
  },
  "parameters": {
    "CreatePost": {
      "description": "Post to create",
      "name": "PostDetails",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/PostDetails"
      }
    },
    "TodoId": {
      "description": "todo id",
      "in": "path",
      "name": "id",
      "required": true,
      "type": "integer"
    },
    "BasicTodo": {
      "description": "Todo Parameter",
      "in": "body",
      "name": "todo",
      "required": true,
      "schema": {
        "$ref": "#/definitions/BasicTodo"
      }
    }
  },
  "responses": {
    "SuccessResponse": {
      "description": "success response"
    },
    "CreatePostSuccessResponse": {
      "description": "Object created",
      "schema": {
        "$ref": "#/definitions/PostResponseDetails"
      }
    },
    "CreatePostFailureResponse": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/CreatePostFailure"
      }
    }
  },
  "paths": {
    "/create/": {
      "post": {
        "operationId": "create_post",
        "summary": "Creates New Post",
        "description": "Creates a new Post and returns the Post id.",
        "parameters": [
          {
            "$ref": "#/parameters/CreatePost"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreatePostSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/CreatePostFailureResponse"
          }
        }
      }
    }
  }
}